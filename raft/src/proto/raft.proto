syntax = "proto2";

package raftpb;

message Entry {
    required uint64 term = 1;
    required bytes data = 2;
}

message PersistentState {
    required uint64 current_term = 1;
    optional uint64 voted_for = 2;
    repeated Entry log = 3;
}

// RequestVote RPC arguments structure.
message RequestVoteArgs {
    // Your data here (2A, 2B).
    required uint64 term = 1;
    required uint64 candidate_id = 2;
    required uint64 last_log_index = 3;
    required uint64 last_log_term = 4;
}

// RequestVote RPC reply structure.
message RequestVoteReply {
    // Your data here (2A).
    required uint64 term = 1;
    required bool vote_granted = 2;
}

// AppendEntriesArgs RPC arguments structure.
message AppendEntriesArgs {
    required uint64 term = 1;
    required uint64 leader_id = 2;
    required uint64 prev_log_index = 3;
    required uint64 prev_log_term = 4;
    repeated Entry entries = 5;
    required uint64 leader_commit = 6;
}

// AppendEntriesReply RPC reply structure.
message AppendEntriesReply {
    required uint64 term = 1;
    required  bool success = 2;
}
